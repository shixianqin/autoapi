import { request, type RequestConfig, type RequestContext } from "@/adapter";

/**
 * Returns options for a client library
 * @path `/gen/clients/{language}`
 */
export function getClientOptions(options: {
  pathParams: API.CustomizeName.Clients.GetClientOptions.PathParams;
  headers?: API.CustomizeName.Clients.GetClientOptions.Headers;
  config?: RequestConfig;
  context?: RequestContext;
}) {
  return request<API.CustomizeName.Clients.GetClientOptions.Response>(
    "get",
    `/gen/clients/${options.pathParams.language}`,
    options,
  );
}

/**
 * Accepts a `GeneratorInput` options map for spec location and generation options
 * @summary Generates a client library
 * @path `/gen/clients/{language}`
 */
export function postGenerateClient(options: {
  pathParams: API.CustomizeName.Clients.PostGenerateClient.PathParams;
  headers?: API.CustomizeName.Clients.PostGenerateClient.Headers;
  body?: API.CustomizeName.Clients.PostGenerateClient.Body;
  config?: RequestConfig;
  context?: RequestContext;
}) {
  return request<API.CustomizeName.Clients.PostGenerateClient.Response>(
    "post",
    `/gen/clients/${options.pathParams.language}`,
    options,
  );
}

/**
 * Gets languages supported by the client generator
 * @path `/gen/clients`
 */
export function getClients_CustomizeNamed(options?: {
  headers?: API.CustomizeName.Clients.GetClientsCustomizeNamed.Headers;
  config?: RequestConfig;
  context?: RequestContext;
}) {
  return request<API.CustomizeName.Clients.GetClientsCustomizeNamed.Response>(
    "get",
    "/gen/clients",
    options || {},
  );
}

/**
 * A valid `fileId` is generated by the `/clients/{language}` or `/servers/{language}` POST operations.  The fileId code can be used just once, after which a new `fileId` will need to be requested.
 * @summary Downloads a pre-generated file
 * @path `/gen/download/{fileId}`
 */
export function getDownloadFile(options: {
  pathParams: API.CustomizeName.Clients.GetDownloadFile.PathParams;
  headers?: API.CustomizeName.Clients.GetDownloadFile.Headers;
  config?: RequestConfig;
  context?: RequestContext;
}) {
  return request<API.CustomizeName.Clients.GetDownloadFile.Response>(
    "get",
    `/gen/download/${options.pathParams.fileId}`,
    options,
  );
}
