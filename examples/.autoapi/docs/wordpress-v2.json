{
  "swagger": "2.0",
  "info": {
    "title": "Wordpress",
    "description": "Wordpress",
    "version": "6.2.5"
  },
  "host": "www.wordpress.org",
  "basePath": "/wp-json",
  "tags": [],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/wp/v2/posts": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to posts published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_after",
            "in": "query",
            "description": "Limit response to posts modified after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "author_exclude",
            "in": "query",
            "description": "Ensure result set excludes posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to posts published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_before",
            "in": "query",
            "description": "Limit response to posts modified before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by post attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "author",
                "date",
                "id",
                "include",
                "modified",
                "parent",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_columns",
            "in": "query",
            "description": "Array of column names to be searched.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "tax_relation",
            "in": "query",
            "description": "Limit result set based on relationship between multiple taxonomies.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AND",
                "OR"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Limit result set to items with specific terms assigned in the categories taxonomy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "categories_exclude",
            "in": "query",
            "description": "Limit result set to items except those with specific terms assigned in the categories taxonomy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Limit result set to items with specific terms assigned in the tags taxonomy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags_exclude",
            "in": "query",
            "description": "Limit result set to items except those with specific terms assigned in the tags taxonomy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "table_tags",
            "in": "query",
            "description": "Limit result set to items with specific terms assigned in the table_tags taxonomy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "table_tags_exclude",
            "in": "query",
            "description": "Limit result set to items except those with specific terms assigned in the table_tags taxonomy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sticky",
            "in": "query",
            "description": "Limit result set to items that are sticky.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "formData",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "formData",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "formData",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "formData",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "format",
            "in": "formData",
            "description": "The format for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "standard",
                "aside",
                "chat",
                "gallery",
                "link",
                "image",
                "quote",
                "status",
                "video",
                "audio"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sticky",
            "in": "formData",
            "description": "Whether or not the post should be treated as sticky.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "categories",
            "in": "formData",
            "description": "The terms assigned to the post in the category taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "tags",
            "in": "formData",
            "description": "The terms assigned to the post in the post_tag taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "table_tags",
            "in": "formData",
            "description": "The terms assigned to the post in the table_tags taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/posts/{id}": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for the post if it is password protected.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "formData",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "formData",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "formData",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "formData",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "format",
            "in": "formData",
            "description": "The format for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "standard",
                "aside",
                "chat",
                "gallery",
                "link",
                "image",
                "quote",
                "status",
                "video",
                "audio"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sticky",
            "in": "formData",
            "description": "Whether or not the post should be treated as sticky.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "categories",
            "in": "formData",
            "description": "The terms assigned to the post in the category taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "tags",
            "in": "formData",
            "description": "The terms assigned to the post in the post_tag taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "table_tags",
            "in": "formData",
            "description": "The terms assigned to the post in the table_tags taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "query",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "query",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "format",
            "in": "query",
            "description": "The format for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "standard",
                "aside",
                "chat",
                "gallery",
                "link",
                "image",
                "quote",
                "status",
                "video",
                "audio"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sticky",
            "in": "query",
            "description": "Whether or not the post should be treated as sticky.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "The terms assigned to the post in the category taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "The terms assigned to the post in the post_tag taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "table_tags",
            "in": "query",
            "description": "The terms assigned to the post in the table_tags taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "query",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "query",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "format",
            "in": "query",
            "description": "The format for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "standard",
                "aside",
                "chat",
                "gallery",
                "link",
                "image",
                "quote",
                "status",
                "video",
                "audio"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sticky",
            "in": "query",
            "description": "Whether or not the post should be treated as sticky.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "The terms assigned to the post in the category taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "The terms assigned to the post in the post_tag taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "table_tags",
            "in": "query",
            "description": "The terms assigned to the post in the table_tags taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/posts/{parent}/revisions": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the revision.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "date",
                "id",
                "include",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/posts/{parent}": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the autosave.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID for the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/posts/{id}/autosaves": {
      "get": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "posts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "formData",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "formData",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "formData",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "formData",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "format",
            "in": "formData",
            "description": "The format for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "standard",
                "aside",
                "chat",
                "gallery",
                "link",
                "image",
                "quote",
                "status",
                "video",
                "audio"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sticky",
            "in": "formData",
            "description": "Whether or not the post should be treated as sticky.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "categories",
            "in": "formData",
            "description": "The terms assigned to the post in the category taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "tags",
            "in": "formData",
            "description": "The terms assigned to the post in the post_tag taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "table_tags",
            "in": "formData",
            "description": "The terms assigned to the post in the table_tags taxonomy.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/pages": {
      "get": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to posts published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_after",
            "in": "query",
            "description": "Limit response to posts modified after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "author_exclude",
            "in": "query",
            "description": "Ensure result set excludes posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to posts published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_before",
            "in": "query",
            "description": "Limit response to posts modified before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "Limit result set to posts with a specific menu_order value.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by post attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "author",
                "date",
                "id",
                "include",
                "modified",
                "parent",
                "relevance",
                "slug",
                "include_slugs",
                "title",
                "menu_order"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "Limit result set to items with particular parent IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "parent_exclude",
            "in": "query",
            "description": "Limit result set to all items except those of a particular parent ID.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "search_columns",
            "in": "query",
            "description": "Array of column names to be searched.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "formData",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "formData",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "formData",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "formData",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "menu_order",
            "in": "formData",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/pages/{id}": {
      "get": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for the post if it is password protected.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "formData",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "formData",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "formData",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "formData",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "menu_order",
            "in": "formData",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "query",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "query",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "query",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "query",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/pages/{parent}/revisions": {
      "get": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the revision.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "date",
                "id",
                "include",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/pages/{parent}": {
      "get": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the autosave.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID for the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/pages/{id}/autosaves": {
      "get": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "pages"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "excerpt",
            "in": "formData",
            "description": "The excerpt for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "formData",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "formData",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "formData",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "menu_order",
            "in": "formData",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/media": {
      "get": {
        "tags": [
          "media"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to posts published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_after",
            "in": "query",
            "description": "Limit response to posts modified after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "author_exclude",
            "in": "query",
            "description": "Ensure result set excludes posts assigned to specific authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to posts published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_before",
            "in": "query",
            "description": "Limit response to posts modified before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by post attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "author",
                "date",
                "id",
                "include",
                "modified",
                "parent",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "Limit result set to items with particular parent IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "parent_exclude",
            "in": "query",
            "description": "Limit result set to all items except those of a particular parent ID.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "search_columns",
            "in": "query",
            "description": "Array of column names to be searched.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "media_type",
            "in": "query",
            "description": "Limit result set to attachments of a particular media type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "image",
                "video",
                "text",
                "application",
                "audio"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "mime_type",
            "in": "query",
            "description": "Limit result set to attachments of a particular MIME type.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "media"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "formData",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "formData",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "alt_text",
            "in": "formData",
            "description": "Alternative text to display when attachment is not displayed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "caption",
            "in": "formData",
            "description": "The attachment caption.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The attachment description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "post",
            "in": "formData",
            "description": "The ID for the associated post of the attachment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/media/{id}": {
      "get": {
        "tags": [
          "media"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "media"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "formData",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "formData",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "alt_text",
            "in": "formData",
            "description": "Alternative text to display when attachment is not displayed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "caption",
            "in": "formData",
            "description": "The attachment caption.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The attachment description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "post",
            "in": "formData",
            "description": "The ID for the associated post of the attachment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "media"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "alt_text",
            "in": "query",
            "description": "Alternative text to display when attachment is not displayed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "caption",
            "in": "query",
            "description": "The attachment caption.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The attachment description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The ID for the associated post of the attachment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "media"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "comment_status",
            "in": "query",
            "description": "Whether or not comments are open on the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "ping_status",
            "in": "query",
            "description": "Whether or not the post can be pinged.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "alt_text",
            "in": "query",
            "description": "Alternative text to display when attachment is not displayed.",
            "required": false,
            "type": "string"
          },
          {
            "name": "caption",
            "in": "query",
            "description": "The attachment caption.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "The attachment description.",
            "required": false,
            "type": "string"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The ID for the associated post of the attachment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "media"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/media/{id}/post-process": {
      "post": {
        "tags": [
          "media"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the attachment.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "action",
            "in": "formData",
            "description": "",
            "required": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "create-image-subsizes"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/media/{id}/edit": {
      "post": {
        "tags": [
          "media"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "src",
            "in": "formData",
            "description": "URL to the edited image file.",
            "required": true,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "modifiers",
            "in": "formData",
            "description": "Array of image edits.",
            "required": false,
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          {
            "name": "rotation",
            "in": "formData",
            "description": "The amount to rotate the image clockwise in degrees. DEPRECATED: Use `modifiers` instead.",
            "required": false,
            "type": "integer",
            "maximum": 360,
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "x",
            "in": "formData",
            "description": "As a percentage of the image, the x position to start the crop from. DEPRECATED: Use `modifiers` instead.",
            "required": false,
            "type": "number",
            "maximum": 100,
            "minimum": 0
          },
          {
            "name": "y",
            "in": "formData",
            "description": "As a percentage of the image, the y position to start the crop from. DEPRECATED: Use `modifiers` instead.",
            "required": false,
            "type": "number",
            "maximum": 100,
            "minimum": 0
          },
          {
            "name": "width",
            "in": "formData",
            "description": "As a percentage of the image, the width to crop the image to. DEPRECATED: Use `modifiers` instead.",
            "required": false,
            "type": "number",
            "maximum": 100,
            "minimum": 0
          },
          {
            "name": "height",
            "in": "formData",
            "description": "As a percentage of the image, the height to crop the image to. DEPRECATED: Use `modifiers` instead.",
            "required": false,
            "type": "number",
            "maximum": 100,
            "minimum": 0
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/menu-items": {
      "get": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to posts published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_after",
            "in": "query",
            "description": "Limit response to posts modified after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to posts published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_before",
            "in": "query",
            "description": "Limit response to posts modified before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "author",
                "date",
                "id",
                "include",
                "modified",
                "parent",
                "relevance",
                "slug",
                "include_slugs",
                "title",
                "menu_order"
              ],
              "default": "menu_order"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_columns",
            "in": "query",
            "description": "Array of column names to be searched.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "tax_relation",
            "in": "query",
            "description": "Limit result set based on relationship between multiple taxonomies.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AND",
                "OR"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "menus",
            "in": "query",
            "description": "Limit result set to items with specific terms assigned in the menus taxonomy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "menus_exclude",
            "in": "query",
            "description": "Limit result set to items except those with specific terms assigned in the menus taxonomy.",
            "required": false,
            "type": "string"
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "Limit result set to posts with a specific menu_order value.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "taxonomy",
                "post_type",
                "post_type_archive",
                "custom"
              ],
              "default": "custom"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the object.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ],
              "default": "publish"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the object.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "attr_title",
            "in": "formData",
            "description": "Text for the title attribute of the link element for this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "classes",
            "in": "formData",
            "description": "Class names for the link element of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description of this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "menu_order",
            "in": "formData",
            "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "object",
            "in": "formData",
            "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
            "required": false,
            "type": "string"
          },
          {
            "name": "object_id",
            "in": "formData",
            "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "target",
            "in": "formData",
            "description": "The target attribute of the link element for this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "_blank",
                ""
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "url",
            "in": "formData",
            "description": "The URL to which this menu item points.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "xfn",
            "in": "formData",
            "description": "The XFN relationship expressed in the link of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "menus",
            "in": "formData",
            "description": "The terms assigned to the object in the nav_menu taxonomy.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/menu-items/{id}": {
      "get": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "taxonomy",
                "post_type",
                "post_type_archive",
                "custom"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the object.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the object.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "attr_title",
            "in": "formData",
            "description": "Text for the title attribute of the link element for this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "classes",
            "in": "formData",
            "description": "Class names for the link element of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description of this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "menu_order",
            "in": "formData",
            "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "object",
            "in": "formData",
            "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
            "required": false,
            "type": "string"
          },
          {
            "name": "object_id",
            "in": "formData",
            "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "target",
            "in": "formData",
            "description": "The target attribute of the link element for this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "_blank",
                ""
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "url",
            "in": "formData",
            "description": "The URL to which this menu item points.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "xfn",
            "in": "formData",
            "description": "The XFN relationship expressed in the link of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "menus",
            "in": "formData",
            "description": "The terms assigned to the object in the nav_menu taxonomy.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "taxonomy",
                "post_type",
                "post_type_archive",
                "custom"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the object.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the object.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "attr_title",
            "in": "query",
            "description": "Text for the title attribute of the link element for this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "classes",
            "in": "query",
            "description": "Class names for the link element of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "object",
            "in": "query",
            "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
            "required": false,
            "type": "string"
          },
          {
            "name": "object_id",
            "in": "query",
            "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "target",
            "in": "query",
            "description": "The target attribute of the link element for this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "_blank",
                ""
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "url",
            "in": "query",
            "description": "The URL to which this menu item points.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "xfn",
            "in": "query",
            "description": "The XFN relationship expressed in the link of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "menus",
            "in": "query",
            "description": "The terms assigned to the object in the nav_menu taxonomy.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "taxonomy",
                "post_type",
                "post_type_archive",
                "custom"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the object.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the object.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "attr_title",
            "in": "query",
            "description": "Text for the title attribute of the link element for this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "classes",
            "in": "query",
            "description": "Class names for the link element of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "The description of this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "object",
            "in": "query",
            "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
            "required": false,
            "type": "string"
          },
          {
            "name": "object_id",
            "in": "query",
            "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "target",
            "in": "query",
            "description": "The target attribute of the link element for this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "_blank",
                ""
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "url",
            "in": "query",
            "description": "The URL to which this menu item points.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "xfn",
            "in": "query",
            "description": "The XFN relationship expressed in the link of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "menus",
            "in": "query",
            "description": "The terms assigned to the object in the nav_menu taxonomy.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/menu-items/{id}/autosaves": {
      "get": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the object.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the object.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "The family of objects originally represented, such as \"post_type\" or \"taxonomy\".",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "taxonomy",
                "post_type",
                "post_type_archive",
                "custom"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the object.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "attr_title",
            "in": "formData",
            "description": "Text for the title attribute of the link element for this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "classes",
            "in": "formData",
            "description": "Class names for the link element of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "formData",
            "description": "The description of this menu item.",
            "required": false,
            "type": "string"
          },
          {
            "name": "menu_order",
            "in": "formData",
            "description": "The DB ID of the nav_menu_item that is this item's menu parent, if any, otherwise 0.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "object",
            "in": "formData",
            "description": "The type of object originally represented, such as \"category\", \"post\", or \"attachment\".",
            "required": false,
            "type": "string"
          },
          {
            "name": "object_id",
            "in": "formData",
            "description": "The database ID of the original object this menu item represents, for example the ID for posts or the term_id for categories.",
            "required": false,
            "type": "integer",
            "minimum": 0,
            "format": "int64"
          },
          {
            "name": "target",
            "in": "formData",
            "description": "The target attribute of the link element for this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "_blank",
                ""
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "url",
            "in": "formData",
            "description": "The URL to which this menu item points.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "xfn",
            "in": "formData",
            "description": "The XFN relationship expressed in the link of this menu item.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "menus",
            "in": "formData",
            "description": "The terms assigned to the object in the nav_menu taxonomy.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/menu-items/{parent}": {
      "get": {
        "tags": [
          "menu-items"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the autosave.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID for the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/blocks": {
      "get": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to posts published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_after",
            "in": "query",
            "description": "Limit response to posts modified after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to posts published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_before",
            "in": "query",
            "description": "Limit response to posts modified before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by post attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "author",
                "date",
                "id",
                "include",
                "modified",
                "parent",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_columns",
            "in": "query",
            "description": "Array of column names to be searched.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/blocks/{id}": {
      "get": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for the post if it is password protected.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/blocks/{parent}/revisions": {
      "get": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the revision.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "date",
                "id",
                "include",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/blocks/{parent}": {
      "get": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the autosave.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID for the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/blocks/{id}/autosaves": {
      "get": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "blocks"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/templates": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "wp_id",
            "in": "query",
            "description": "Limit to the specified post id.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "area",
            "in": "query",
            "description": "Limit to the specified template part area.",
            "required": false,
            "type": "string"
          },
          {
            "name": "post_type",
            "in": "query",
            "description": "Post type to get the templates for.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "formData",
            "description": "Unique slug identifying the template.",
            "required": true,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "formData",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ],
              "default": "publish"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/templates/lookup": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "description": "The slug of the template to get the fallback for",
            "required": true,
            "type": "string"
          },
          {
            "name": "is_custom",
            "in": "query",
            "description": "Indicates if a template is custom or part of the template hierarchy",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "template_prefix",
            "in": "query",
            "description": "The template prefix for the created template. This is used to extract the main template type, e.g. in `taxonomy-books` extracts the `taxonomy`",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/templates/{id}": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "Unique slug identifying the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "formData",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Unique slug identifying the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "query",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Unique slug identifying the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "query",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/templates/{parent}/revisions": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the revision.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "date",
                "id",
                "include",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/templates/{parent}": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the autosave.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID for the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/templates/{id}/autosaves": {
      "get": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "templates"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "Unique slug identifying the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "formData",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/template-parts": {
      "get": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "wp_id",
            "in": "query",
            "description": "Limit to the specified post id.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "area",
            "in": "query",
            "description": "Limit to the specified template part area.",
            "required": false,
            "type": "string"
          },
          {
            "name": "post_type",
            "in": "query",
            "description": "Post type to get the templates for.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "formData",
            "description": "Unique slug identifying the template.",
            "required": true,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "formData",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ],
              "default": "publish"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "area",
            "in": "formData",
            "description": "Where the template part is intended for use (header, footer, etc.)",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/template-parts/lookup": {
      "get": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "query",
            "description": "The slug of the template to get the fallback for",
            "required": true,
            "type": "string"
          },
          {
            "name": "is_custom",
            "in": "query",
            "description": "Indicates if a template is custom or part of the template hierarchy",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "template_prefix",
            "in": "query",
            "description": "The template prefix for the created template. This is used to extract the main template type, e.g. in `taxonomy-books` extracts the `taxonomy`",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/template-parts/{id}": {
      "get": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "Unique slug identifying the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "formData",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "area",
            "in": "formData",
            "description": "Where the template part is intended for use (header, footer, etc.)",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Unique slug identifying the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "query",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "area",
            "in": "query",
            "description": "Where the template part is intended for use (header, footer, etc.)",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Unique slug identifying the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "query",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "area",
            "in": "query",
            "description": "Where the template part is intended for use (header, footer, etc.)",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/template-parts/{parent}/revisions": {
      "get": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the revision.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "date",
                "id",
                "include",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/template-parts/{parent}": {
      "get": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the autosave.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID for the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/template-parts/{id}/autosaves": {
      "get": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "template-parts"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "Unique slug identifying the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "theme",
            "in": "formData",
            "description": "Theme identifier for the template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "formData",
            "description": "Type of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "Content of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Title of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description of template.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Status of template.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID for the author of the template.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "area",
            "in": "formData",
            "description": "Where the template part is intended for use (header, footer, etc.)",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/navigation": {
      "get": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to posts published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_after",
            "in": "query",
            "description": "Limit response to posts modified after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to posts published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_before",
            "in": "query",
            "description": "Limit response to posts modified before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by post attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "author",
                "date",
                "id",
                "include",
                "modified",
                "parent",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_columns",
            "in": "query",
            "description": "Array of column names to be searched.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/navigation/{id}": {
      "get": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for the post if it is password protected.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/navigation/{parent}/revisions": {
      "get": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the revision.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "date",
                "id",
                "include",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/navigation/{parent}": {
      "get": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the autosave.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID for the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/navigation/{id}/autosaves": {
      "get": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "navigation"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/wptb-tables": {
      "get": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to posts published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_after",
            "in": "query",
            "description": "Limit response to posts modified after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to posts published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_before",
            "in": "query",
            "description": "Limit response to posts modified before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by post attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "author",
                "date",
                "id",
                "include",
                "modified",
                "parent",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search_columns",
            "in": "query",
            "description": "Array of column names to be searched.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/wptb-tables/{id}": {
      "get": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for the post if it is password protected.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/wptb-tables/{id}/autosaves": {
      "get": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/wptb-tables/{parent}": {
      "get": {
        "tags": [
          "wptb-tables"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the autosave.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID for the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/gp_elements": {
      "get": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to posts published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_after",
            "in": "query",
            "description": "Limit response to posts modified after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to posts published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modified_before",
            "in": "query",
            "description": "Limit response to posts modified before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "Limit result set to posts with a specific menu_order value.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by post attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "author",
                "date",
                "id",
                "include",
                "modified",
                "parent",
                "relevance",
                "slug",
                "include_slugs",
                "title",
                "menu_order"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "Limit result set to items with particular parent IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "parent_exclude",
            "in": "query",
            "description": "Limit result set to all items except those of a particular parent ID.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "search_columns",
            "in": "query",
            "description": "Array of column names to be searched.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to posts with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to posts assigned one or more statuses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "formData",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "menu_order",
            "in": "formData",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/gp_elements/{id}": {
      "get": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for the post if it is password protected.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "formData",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "menu_order",
            "in": "formData",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "query",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "title",
            "in": "query",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "query",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "menu_order",
            "in": "query",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "query",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the post.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/gp_elements/{parent}/revisions": {
      "get": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the revision.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by object attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "date",
                "id",
                "include",
                "relevance",
                "slug",
                "include_slugs",
                "title"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/gp_elements/{parent}": {
      "get": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "path",
            "description": "The ID for the parent of the autosave.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "id",
            "in": "query",
            "description": "The ID for the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/gp_elements/{id}/autosaves": {
      "get": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the autosave.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "gp_elements"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the post was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the post was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the post unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "A named status for the post.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "publish",
                "future",
                "draft",
                "pending",
                "private",
                "in-progress",
                "failed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "A password to protect access to the content and excerpt.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "The title for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "featured_media",
            "in": "formData",
            "description": "The ID of the featured media for the post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "menu_order",
            "in": "formData",
            "description": "The order of the post in relation to other posts.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "template",
            "in": "formData",
            "description": "The theme file to use to display the post.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/types": {
      "get": {
        "tags": [
          "types"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/types/{type}": {
      "get": {
        "tags": [
          "types"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "An alphanumeric identifier for the post type.",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/statuses": {
      "get": {
        "tags": [
          "statuses"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/statuses/{status}": {
      "get": {
        "tags": [
          "statuses"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "An alphanumeric identifier for the status.",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/taxonomies": {
      "get": {
        "tags": [
          "taxonomies"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Limit results to taxonomies associated with a specific post type.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/taxonomies/{taxonomy}": {
      "get": {
        "tags": [
          "taxonomies"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "taxonomy",
            "in": "path",
            "description": "An alphanumeric identifier for the taxonomy.",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/categories": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by term attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "include",
                "name",
                "slug",
                "include_slugs",
                "term_group",
                "description",
                "count"
              ],
              "default": "name"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hide_empty",
            "in": "query",
            "description": "Whether to hide terms not assigned to any posts.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "Limit result set to terms assigned to a specific parent.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "post",
            "in": "query",
            "description": "Limit result set to terms assigned to a specific post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to terms with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "description",
            "in": "formData",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "HTML title for the term.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The parent term ID.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/categories/{id}": {
      "get": {
        "tags": [
          "categories"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "categories"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The parent term ID.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "categories"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The parent term ID.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "categories"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The parent term ID.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "categories"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Required to be true, as terms do not support trashing.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/tags": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by term attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "include",
                "name",
                "slug",
                "include_slugs",
                "term_group",
                "description",
                "count"
              ],
              "default": "name"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hide_empty",
            "in": "query",
            "description": "Whether to hide terms not assigned to any posts.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "post",
            "in": "query",
            "description": "Limit result set to terms assigned to a specific post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to terms with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "description",
            "in": "formData",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "HTML title for the term.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/tags/{id}": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Required to be true, as terms do not support trashing.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/menus": {
      "get": {
        "tags": [
          "menus"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by term attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "include",
                "name",
                "slug",
                "include_slugs",
                "term_group",
                "description",
                "count"
              ],
              "default": "name"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hide_empty",
            "in": "query",
            "description": "Whether to hide terms not assigned to any posts.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "post",
            "in": "query",
            "description": "Limit result set to terms assigned to a specific post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to terms with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "menus"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "description",
            "in": "formData",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "HTML title for the term.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locations",
            "in": "formData",
            "description": "The locations assigned to the menu.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "auto_add",
            "in": "formData",
            "description": "Whether to automatically add top level pages to this menu.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/menus/{id}": {
      "get": {
        "tags": [
          "menus"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "menus"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locations",
            "in": "formData",
            "description": "The locations assigned to the menu.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "auto_add",
            "in": "formData",
            "description": "Whether to automatically add top level pages to this menu.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "menus"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locations",
            "in": "query",
            "description": "The locations assigned to the menu.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "auto_add",
            "in": "query",
            "description": "Whether to automatically add top level pages to this menu.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "menus"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locations",
            "in": "query",
            "description": "The locations assigned to the menu.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "auto_add",
            "in": "query",
            "description": "Whether to automatically add top level pages to this menu.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "menus"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Required to be true, as terms do not support trashing.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/table_tags": {
      "get": {
        "tags": [
          "table_tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by term attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "include",
                "name",
                "slug",
                "include_slugs",
                "term_group",
                "description",
                "count"
              ],
              "default": "name"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "hide_empty",
            "in": "query",
            "description": "Whether to hide terms not assigned to any posts.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "post",
            "in": "query",
            "description": "Limit result set to terms assigned to a specific post.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to terms with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "table_tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "description",
            "in": "formData",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "HTML title for the term.",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/table_tags/{id}": {
      "get": {
        "tags": [
          "table_tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "table_tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "table_tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "table_tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "description": "HTML description of the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "HTML title for the term.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the term unique to its type.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "table_tags"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the term.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Required to be true, as terms do not support trashing.",
            "required": false,
            "type": "boolean"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by user attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "id",
                "include",
                "name",
                "registered_date",
                "slug",
                "include_slugs",
                "email",
                "url"
              ],
              "default": "name"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit result set to users with one or more specific slugs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Limit result set to users matching at least one specific role provided. Accepts csv list or single role.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "capabilities",
            "in": "query",
            "description": "Limit result set to users matching at least one specific capability provided. Accepts csv list or single capability.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "who",
            "in": "query",
            "description": "Limit result set to users who are considered authors.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "authors"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "has_published_posts",
            "in": "query",
            "description": "Limit result set to users who have published posts.",
            "required": false,
            "type": "boolean",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "description": "Login name for the user.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Display name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "formData",
            "description": "First name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "formData",
            "description": "Last name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The email address for the user.",
            "required": true,
            "type": "string",
            "format": "email"
          },
          {
            "name": "url",
            "in": "formData",
            "description": "URL of the user.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "formData",
            "description": "Locale for the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "",
                "en_US",
                "zh_CN"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nickname",
            "in": "formData",
            "description": "The nickname for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "formData",
            "description": "Roles assigned to the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password for the user (never included).",
            "required": true,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the user.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the user.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "username",
            "in": "formData",
            "description": "Login name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Display name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "formData",
            "description": "First name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "formData",
            "description": "Last name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The email address for the user.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "url",
            "in": "formData",
            "description": "URL of the user.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "formData",
            "description": "Locale for the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "",
                "en_US",
                "zh_CN"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nickname",
            "in": "formData",
            "description": "The nickname for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "formData",
            "description": "Roles assigned to the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password for the user (never included).",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the user.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "username",
            "in": "query",
            "description": "Login name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Display name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "First name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "Last name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The email address for the user.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL of the user.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale for the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "",
                "en_US",
                "zh_CN"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nickname",
            "in": "query",
            "description": "The nickname for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Roles assigned to the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password for the user (never included).",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the user.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "username",
            "in": "query",
            "description": "Login name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Display name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "First name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "Last name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The email address for the user.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL of the user.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale for the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "",
                "en_US",
                "zh_CN"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nickname",
            "in": "query",
            "description": "The nickname for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Roles assigned to the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password for the user (never included).",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the user.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Required to be true, as users do not support trashing.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "reassign",
            "in": "query",
            "description": "Reassign the deleted user's posts and links to this user ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/users/me": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "formData",
            "description": "Login name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Display name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "formData",
            "description": "First name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "formData",
            "description": "Last name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "The email address for the user.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "url",
            "in": "formData",
            "description": "URL of the user.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "formData",
            "description": "Locale for the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "",
                "en_US",
                "zh_CN"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nickname",
            "in": "formData",
            "description": "The nickname for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "formData",
            "description": "An alphanumeric identifier for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "formData",
            "description": "Roles assigned to the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "formData",
            "description": "Password for the user (never included).",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Login name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Display name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "First name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "Last name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The email address for the user.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL of the user.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale for the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "",
                "en_US",
                "zh_CN"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nickname",
            "in": "query",
            "description": "The nickname for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Roles assigned to the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password for the user (never included).",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "Login name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Display name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "First name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "Last name for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "The email address for the user.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "url",
            "in": "query",
            "description": "URL of the user.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "locale",
            "in": "query",
            "description": "Locale for the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "",
                "en_US",
                "zh_CN"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nickname",
            "in": "query",
            "description": "The nickname for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "An alphanumeric identifier for the user.",
            "required": false,
            "type": "string"
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Roles assigned to the user.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Password for the user (never included).",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "description": "Required to be true, as users do not support trashing.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "reassign",
            "in": "query",
            "description": "Reassign the deleted user's posts and links to this user ID.",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/users/{user_id}/application-passwords": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "formData",
            "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name of the application password.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/users/{user_id}/application-passwords/introspect": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/users/{user_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "formData",
            "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "The name of the application password.",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the application password.",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "description": "A UUID provided by the application to uniquely identify it. It is recommended to use an UUID v5 with the URL or DNS namespace.",
            "required": false,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of the application password.",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/comments": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "after",
            "in": "query",
            "description": "Limit response to comments published after a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "author",
            "in": "query",
            "description": "Limit result set to comments assigned to specific user IDs. Requires authorization.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "author_exclude",
            "in": "query",
            "description": "Ensure result set excludes comments assigned to specific user IDs. Requires authorization.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "author_email",
            "in": "query",
            "description": "Limit result set to that from a specific author email. Requires authorization.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Limit response to comments published before a given ISO8601 compliant date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by comment attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "date",
                "date_gmt",
                "id",
                "include",
                "post",
                "parent",
                "type"
              ],
              "default": "date_gmt"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "Limit result set to comments of specific parent IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "parent_exclude",
            "in": "query",
            "description": "Ensure result set excludes specific parent IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "post",
            "in": "query",
            "description": "Limit result set to comments assigned to specific post IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to comments assigned a specific status. Requires authorization.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Limit result set to comments assigned a specific type. Requires authorization.",
            "required": false,
            "type": "string"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for the post if it is password protected.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "author",
            "in": "formData",
            "description": "The ID of the user object, if author was a user.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "author_email",
            "in": "formData",
            "description": "Email address for the comment author.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "author_ip",
            "in": "formData",
            "description": "IP address for the comment author.",
            "required": false,
            "type": "string",
            "format": "ip"
          },
          {
            "name": "author_name",
            "in": "formData",
            "description": "Display name for the comment author.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author_url",
            "in": "formData",
            "description": "URL for the comment author.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "author_user_agent",
            "in": "formData",
            "description": "User agent for the comment author.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the comment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the comment was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the comment was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the comment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "post",
            "in": "formData",
            "description": "The ID of the associated post object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "State of the comment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/comments/{id}": {
      "get": {
        "tags": [
          "comments"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the comment.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for the parent post of the comment (if the post is password protected).",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "comments"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the comment.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "author",
            "in": "formData",
            "description": "The ID of the user object, if author was a user.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "author_email",
            "in": "formData",
            "description": "Email address for the comment author.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "author_ip",
            "in": "formData",
            "description": "IP address for the comment author.",
            "required": false,
            "type": "string",
            "format": "ip"
          },
          {
            "name": "author_name",
            "in": "formData",
            "description": "Display name for the comment author.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author_url",
            "in": "formData",
            "description": "URL for the comment author.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "author_user_agent",
            "in": "formData",
            "description": "User agent for the comment author.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "formData",
            "description": "The content for the comment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "formData",
            "description": "The date the comment was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "formData",
            "description": "The date the comment was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "parent",
            "in": "formData",
            "description": "The ID for the parent of the comment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "post",
            "in": "formData",
            "description": "The ID of the associated post object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "State of the comment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "formData",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "comments"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the comment.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID of the user object, if author was a user.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "author_email",
            "in": "query",
            "description": "Email address for the comment author.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "author_ip",
            "in": "query",
            "description": "IP address for the comment author.",
            "required": false,
            "type": "string",
            "format": "ip"
          },
          {
            "name": "author_name",
            "in": "query",
            "description": "Display name for the comment author.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author_url",
            "in": "query",
            "description": "URL for the comment author.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "author_user_agent",
            "in": "query",
            "description": "User agent for the comment author.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the comment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the comment was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the comment was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the comment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The ID of the associated post object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "query",
            "description": "State of the comment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "comments"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the comment.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "author",
            "in": "query",
            "description": "The ID of the user object, if author was a user.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "author_email",
            "in": "query",
            "description": "Email address for the comment author.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "author_ip",
            "in": "query",
            "description": "IP address for the comment author.",
            "required": false,
            "type": "string",
            "format": "ip"
          },
          {
            "name": "author_name",
            "in": "query",
            "description": "Display name for the comment author.",
            "required": false,
            "type": "string"
          },
          {
            "name": "author_url",
            "in": "query",
            "description": "URL for the comment author.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "author_user_agent",
            "in": "query",
            "description": "User agent for the comment author.",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "The content for the comment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "The date the comment was published, in the site's timezone.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_gmt",
            "in": "query",
            "description": "The date the comment was published, as GMT.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "The ID for the parent of the comment.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "post",
            "in": "query",
            "description": "The ID of the associated post object.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "status",
            "in": "query",
            "description": "State of the comment.",
            "required": false,
            "type": "string"
          },
          {
            "name": "meta",
            "in": "query",
            "description": "Meta fields.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "comments"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the comment.",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "force",
            "in": "query",
            "description": "Whether to bypass Trash and force deletion.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for the parent post of the comment (if the post is password protected).",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/search": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Limit results to items of an object type.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "post",
                "term",
                "post-format"
              ],
              "default": "post"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "subtype",
            "in": "query",
            "description": "Limit results to items of one or more object subtypes.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "exclude",
            "in": "query",
            "description": "Ensure result set excludes specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "include",
            "in": "query",
            "description": "Limit result set to specific IDs.",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/block-renderer/{name}": {
      "get": {
        "tags": [
          "block-renderer"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Unique registered name for the block.",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "attributes",
            "in": "query",
            "description": "Attributes for the block.",
            "required": false,
            "type": "string"
          },
          {
            "name": "post_id",
            "in": "query",
            "description": "ID of the post context.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "block-renderer"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Unique registered name for the block.",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "formData",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "attributes",
            "in": "formData",
            "description": "Attributes for the block.",
            "required": false,
            "type": "string"
          },
          {
            "name": "post_id",
            "in": "formData",
            "description": "ID of the post context.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/block-types": {
      "get": {
        "tags": [
          "block-types"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Block namespace.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/block-types/{namespace}": {
      "get": {
        "tags": [
          "block-types"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Block name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "path",
            "description": "Block namespace.",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/global-styles/themes/{stylesheet}/variations": {
      "get": {
        "tags": [
          "global-styles"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "stylesheet",
            "in": "path",
            "description": "The theme identifier",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/global-styles/themes/{stylesheet}": {
      "get": {
        "tags": [
          "global-styles"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "stylesheet",
            "in": "path",
            "description": "The theme identifier",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/global-styles/{id}": {
      "get": {
        "tags": [
          "global-styles"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a template",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "global-styles"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "styles",
            "in": "formData",
            "description": "Global styles.",
            "required": false,
            "type": "string"
          },
          {
            "name": "settings",
            "in": "formData",
            "description": "Global settings.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "description": "Title of the global styles variation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "global-styles"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "styles",
            "in": "query",
            "description": "Global styles.",
            "required": false,
            "type": "string"
          },
          {
            "name": "settings",
            "in": "query",
            "description": "Global settings.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title of the global styles variation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "global-styles"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "styles",
            "in": "query",
            "description": "Global styles.",
            "required": false,
            "type": "string"
          },
          {
            "name": "settings",
            "in": "query",
            "description": "Global settings.",
            "required": false,
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "description": "Title of the global styles variation.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/settings": {
      "get": {
        "tags": [
          "settings"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "settings"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "formData",
            "description": "Site title.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Site tagline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "url",
            "in": "formData",
            "description": "Site URL.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "email",
            "in": "formData",
            "description": "This address is used for admin purposes, like new user notification.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "timezone",
            "in": "formData",
            "description": "A city in the same timezone as you.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_format",
            "in": "formData",
            "description": "A date format for all date strings.",
            "required": false,
            "type": "string"
          },
          {
            "name": "time_format",
            "in": "formData",
            "description": "A time format for all time strings.",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_of_week",
            "in": "formData",
            "description": "A day number of the week that the week should start on.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "language",
            "in": "formData",
            "description": "WordPress locale code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "use_smilies",
            "in": "formData",
            "description": "Convert emoticons like :-) and :-P to graphics on display.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "default_category",
            "in": "formData",
            "description": "Default post category.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "default_post_format",
            "in": "formData",
            "description": "Default post format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "posts_per_page",
            "in": "formData",
            "description": "Blog pages show at most.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "show_on_front",
            "in": "formData",
            "description": "What to show on the front page",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_on_front",
            "in": "formData",
            "description": "The ID of the page that should be displayed on the front page",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page_for_posts",
            "in": "formData",
            "description": "The ID of the page that should display the latest posts",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "default_ping_status",
            "in": "formData",
            "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "default_comment_status",
            "in": "formData",
            "description": "Allow people to submit comments on new posts.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "site_logo",
            "in": "formData",
            "description": "Site logo.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "site_icon",
            "in": "formData",
            "description": "Site icon.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "settings"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Site title.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Site tagline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "url",
            "in": "query",
            "description": "Site URL.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "email",
            "in": "query",
            "description": "This address is used for admin purposes, like new user notification.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "A city in the same timezone as you.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_format",
            "in": "query",
            "description": "A date format for all date strings.",
            "required": false,
            "type": "string"
          },
          {
            "name": "time_format",
            "in": "query",
            "description": "A time format for all time strings.",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_of_week",
            "in": "query",
            "description": "A day number of the week that the week should start on.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "language",
            "in": "query",
            "description": "WordPress locale code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "use_smilies",
            "in": "query",
            "description": "Convert emoticons like :-) and :-P to graphics on display.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "default_category",
            "in": "query",
            "description": "Default post category.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "default_post_format",
            "in": "query",
            "description": "Default post format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "posts_per_page",
            "in": "query",
            "description": "Blog pages show at most.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "show_on_front",
            "in": "query",
            "description": "What to show on the front page",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_on_front",
            "in": "query",
            "description": "The ID of the page that should be displayed on the front page",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page_for_posts",
            "in": "query",
            "description": "The ID of the page that should display the latest posts",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "default_ping_status",
            "in": "query",
            "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "default_comment_status",
            "in": "query",
            "description": "Allow people to submit comments on new posts.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "site_logo",
            "in": "query",
            "description": "Site logo.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "site_icon",
            "in": "query",
            "description": "Site icon.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "settings"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "description": "Site title.",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "Site tagline.",
            "required": false,
            "type": "string"
          },
          {
            "name": "url",
            "in": "query",
            "description": "Site URL.",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "email",
            "in": "query",
            "description": "This address is used for admin purposes, like new user notification.",
            "required": false,
            "type": "string",
            "format": "email"
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "A city in the same timezone as you.",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_format",
            "in": "query",
            "description": "A date format for all date strings.",
            "required": false,
            "type": "string"
          },
          {
            "name": "time_format",
            "in": "query",
            "description": "A time format for all time strings.",
            "required": false,
            "type": "string"
          },
          {
            "name": "start_of_week",
            "in": "query",
            "description": "A day number of the week that the week should start on.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "language",
            "in": "query",
            "description": "WordPress locale code.",
            "required": false,
            "type": "string"
          },
          {
            "name": "use_smilies",
            "in": "query",
            "description": "Convert emoticons like :-) and :-P to graphics on display.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "default_category",
            "in": "query",
            "description": "Default post category.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "default_post_format",
            "in": "query",
            "description": "Default post format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "posts_per_page",
            "in": "query",
            "description": "Blog pages show at most.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "show_on_front",
            "in": "query",
            "description": "What to show on the front page",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_on_front",
            "in": "query",
            "description": "The ID of the page that should be displayed on the front page",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page_for_posts",
            "in": "query",
            "description": "The ID of the page that should display the latest posts",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "default_ping_status",
            "in": "query",
            "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "default_comment_status",
            "in": "query",
            "description": "Allow people to submit comments on new posts.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "open",
                "closed"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "site_logo",
            "in": "query",
            "description": "Site logo.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "site_icon",
            "in": "query",
            "description": "Site icon.",
            "required": false,
            "type": "integer",
            "format": "int64"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/themes": {
      "get": {
        "tags": [
          "themes"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Limit result set to themes assigned one or more statuses.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/themes/{stylesheet}": {
      "get": {
        "tags": [
          "themes"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "stylesheet",
            "in": "path",
            "description": "The theme's stylesheet. This uniquely identifies the theme.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/plugins": {
      "get": {
        "tags": [
          "plugins"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "Limits results to plugins with the given status.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "plugins"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "formData",
            "description": "WordPress.org plugin directory slug.",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The plugin activation status.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "inactive",
                "active"
              ],
              "default": "inactive"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/plugins/{plugin}": {
      "get": {
        "tags": [
          "plugins"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "plugin",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "plugins"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "formData",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "plugin",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "The plugin activation status.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "inactive",
                "active"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "plugins"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "plugin",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The plugin activation status.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "inactive",
                "active"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "plugins"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "plugin",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "The plugin activation status.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "inactive",
                "active"
              ]
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "plugins"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "plugin",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/sidebars": {
      "get": {
        "tags": [
          "sidebars"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/sidebars/{id}": {
      "get": {
        "tags": [
          "sidebars"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of a registered sidebar",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "sidebars"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "widgets",
            "in": "formData",
            "description": "Nested widgets.",
            "required": false,
            "type": "array",
            "items": {
              "type": [
                "object",
                "string"
              ]
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "sidebars"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "widgets",
            "in": "query",
            "description": "Nested widgets.",
            "required": false,
            "type": "array",
            "items": {
              "type": [
                "object",
                "string"
              ]
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "sidebars"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "widgets",
            "in": "query",
            "description": "Nested widgets.",
            "required": false,
            "type": "array",
            "items": {
              "type": [
                "object",
                "string"
              ]
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/widget-types": {
      "get": {
        "tags": [
          "widget-types"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/widget-types/{id}": {
      "get": {
        "tags": [
          "widget-types"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The widget type id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/widget-types/{id}/encode": {
      "post": {
        "tags": [
          "widget-types"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The widget type id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "formData",
            "description": "Current instance settings of the widget.",
            "required": false,
            "type": "string"
          },
          {
            "name": "form_data",
            "in": "formData",
            "description": "Serialized widget form data to encode into instance settings.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/widget-types/{id}/render": {
      "post": {
        "tags": [
          "widget-types"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The widget type id.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "formData",
            "description": "Current instance settings of the widget.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/widgets": {
      "get": {
        "tags": [
          "widgets"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "sidebar",
            "in": "query",
            "description": "The sidebar to return widgets for.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "widgets"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "formData",
            "description": "Unique identifier for the widget.",
            "required": false,
            "type": "string"
          },
          {
            "name": "id_base",
            "in": "formData",
            "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sidebar",
            "in": "formData",
            "description": "The sidebar the widget belongs to.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "formData",
            "description": "Instance settings of the widget, if supported.",
            "required": false,
            "type": "string"
          },
          {
            "name": "form_data",
            "in": "formData",
            "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/widgets/{id}": {
      "get": {
        "tags": [
          "widgets"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "widgets"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the widget.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id_base",
            "in": "formData",
            "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sidebar",
            "in": "formData",
            "description": "The sidebar the widget belongs to.",
            "required": false,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "formData",
            "description": "Instance settings of the widget, if supported.",
            "required": false,
            "type": "string"
          },
          {
            "name": "form_data",
            "in": "formData",
            "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "widgets"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the widget.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id_base",
            "in": "query",
            "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sidebar",
            "in": "query",
            "description": "The sidebar the widget belongs to.",
            "required": false,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "query",
            "description": "Instance settings of the widget, if supported.",
            "required": false,
            "type": "string"
          },
          {
            "name": "form_data",
            "in": "query",
            "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "tags": [
          "widgets"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique identifier for the widget.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id_base",
            "in": "query",
            "description": "The type of the widget. Corresponds to ID in widget-types endpoint.",
            "required": false,
            "type": "string"
          },
          {
            "name": "sidebar",
            "in": "query",
            "description": "The sidebar the widget belongs to.",
            "required": false,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "query",
            "description": "Instance settings of the widget, if supported.",
            "required": false,
            "type": "string"
          },
          {
            "name": "form_data",
            "in": "query",
            "description": "URL-encoded form data from the widget admin form. Used to update a widget that does not support instance. Write only.",
            "required": false,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "widgets"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "description": "Whether to force removal of the widget, or move it to the inactive sidebar.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/block-directory/search": {
      "get": {
        "tags": [
          "block-directory"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "term",
            "in": "query",
            "description": "Limit result set to blocks matching the search term.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/pattern-directory/patterns": {
      "get": {
        "tags": [
          "pattern-directory"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Current page of the collection.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Maximum number of items to be returned in result set.",
            "required": false,
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Limit results to those matching a string.",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "description": "Limit results to those matching a category ID.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Limit results to those matching a keyword ID.",
            "required": false,
            "type": "integer",
            "minimum": 1,
            "format": "int64"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "Limit results to those matching a pattern (slug).",
            "required": false,
            "type": "array"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset the result set by a specific number of items.",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order sort attribute ascending or descending.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "desc"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Sort collection by post attribute.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "author",
                "date",
                "id",
                "include",
                "modified",
                "parent",
                "relevance",
                "slug",
                "include_slugs",
                "title",
                "favorite_count"
              ],
              "default": "date"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/block-patterns/patterns": {
      "get": {
        "tags": [
          "block-patterns"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/block-patterns/categories": {
      "get": {
        "tags": [
          "block-patterns"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/menu-locations": {
      "get": {
        "tags": [
          "menu-locations"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/wp/v2/menu-locations/{location}": {
      "get": {
        "tags": [
          "menu-locations"
        ],
        "summary": "",
        "description": "",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "location",
            "in": "path",
            "description": "An alphanumeric identifier for the menu location.",
            "required": true,
            "type": "string"
          },
          {
            "name": "context",
            "in": "query",
            "description": "Scope under which the request is made; determines fields present in response.",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "view",
                "embed",
                "edit"
              ],
              "default": "view"
            },
            "collectionFormat": "multi"
          }
        ],
        "security": [
          {
            "basic": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  }
}